Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> expression
Rule 2     expression -> expression + expression
Rule 3     expression -> NUMBER

Terminals, with rules where they appear

+                    : 2
NUMBER               : 3
error                : 

Nonterminals, with rules where they appear

expression           : 1 2 2
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . expression
    (2) expression -> . expression + expression
    (3) expression -> . NUMBER

    NUMBER          shift and go to state 3

    statement                      shift and go to state 1
    expression                     shift and go to state 2

state 1

    (0) S' -> statement .



state 2

    (1) statement -> expression .
    (2) expression -> expression . + expression

    $end            reduce using rule 1 (statement -> expression .)
    +               shift and go to state 4


state 3

    (3) expression -> NUMBER .

    +               reduce using rule 3 (expression -> NUMBER .)
    $end            reduce using rule 3 (expression -> NUMBER .)


state 4

    (2) expression -> expression + . expression
    (2) expression -> . expression + expression
    (3) expression -> . NUMBER

    NUMBER          shift and go to state 3

    expression                     shift and go to state 5

state 5

    (2) expression -> expression + expression .
    (2) expression -> expression . + expression

    +               reduce using rule 2 (expression -> expression + expression .)
    $end            reduce using rule 2 (expression -> expression + expression .)

  ! +               [ shift and go to state 4 ]

